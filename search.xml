<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>javascript数组的常用操作方法</title>
      <link href="//post/js%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>//post/js%E6%95%B0%E7%BB%84%E6%93%8D%E4%BD%9C%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>javascript数组的常用操作方法</p><a id="more"></a><p>暂未有内容</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>javascript正则表达式使用方法及常用表达式</title>
      <link href="//post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>//post/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p>导读：<br>这篇文章主要学习如何使用[正则表达式]和如何去[校验]输入的内容,接下来一起看看吧</p><a id="more"></a><h2 id="JavaScript正则表达式"><a href="#JavaScript正则表达式" class="headerlink" title="JavaScript正则表达式"></a>JavaScript正则表达式</h2><p>正则表达式 使用单个字符串来描述、匹配一系列符合某个语句规则的字符串搜索模式</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><p>/正则表达式主体/<br>举个栗子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var reg &#x3D; &#x2F;^\d&#123;11&#125;$&#x2F;</span><br><span class="line">&#x2F;&#x2F; 匹配11位纯数字</span><br></pre></td></tr></table></figure><p>‘^’为匹配首字符必须为某某<br>‘$’为匹配末字符必须为某某<br>‘\d’为匹配0-9的数字 也可为[0-9]</p><h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2><p>search()  //搜索<br>replace()  // 替换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;search()</span><br><span class="line">var str &#x3D; &#39;hello world!&#39;</span><br><span class="line">var n &#x3D; str.search(&#x2F;world&#x2F;) &#x2F;&#x2F;n &#x3D; 7 (如何搜索不到就返回-1)</span><br><span class="line">&#x2F;&#x2F; replace()</span><br><span class="line">var str &#x3D; &#39;hello world!&#39;</span><br><span class="line">var txt &#x3D; str.replace(&#x2F;javascript&#x2F;i,&#39;world&#39;)  &#x2F;&#x2F;txt &#x3D; &#39;hello javascript&#39;</span><br></pre></td></tr></table></figure><h2 id="正则修饰符"><a href="#正则修饰符" class="headerlink" title="正则修饰符"></a>正则修饰符</h2><p>i 执行对大小写不敏感的匹配<br>g 执行全局匹配<br>m 执行多行匹配</p><h2 id="正则表达式模式"><a href="#正则表达式模式" class="headerlink" title="正则表达式模式"></a>正则表达式模式</h2><h1 id="某一范围"><a href="#某一范围" class="headerlink" title="某一范围"></a>某一范围</h1><p>[abc] 查找方括号的任何字符<br>[0-9] 查找任何从0-9的数字<br>(x|y) 查找任何x或y的选项</p><h1 id="元字符"><a href="#元字符" class="headerlink" title="元字符"></a>元字符</h1><p>\d 查找数字 相当于[0-9]<br>\D 匹配非数字字符<br>\w 匹配单个字符(字母、数字或者下划线) 等价于 [A-Za-z0-9_]<br>\W 匹配非单字符 等价于[^A-Za-z0-9_]<br>\s 查找空白字符<br>\S 匹配非空字符<br>\b 匹配单词边界<br>(*) 匹配一个表达式0次或者多次 {0,}<br>(+) 匹配前一个表达式1次或者多次 {1,}<br>(?) 匹配前一个表达式0次或者1次<br>\uxxx 查找以16进制 xxx 规定的 Unicode</p><h2 id="使用-RegExp-对象"><a href="#使用-RegExp-对象" class="headerlink" title="使用 RegExp 对象"></a>使用 RegExp 对象</h2><h1 id="test"><a href="#test" class="headerlink" title="test()"></a>test()</h1><p>test()方法用于检测一个字符串是否匹配某一模式,如果匹配，则返回true 否则返回false<br>举个例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var reg &#x3D; &#x2F;e&#x2F;</span><br><span class="line">return reg.test(&#39;the best things in life are free!&#39;) &#x2F;&#x2F;true</span><br></pre></td></tr></table></figure><h2 id="常用实例"><a href="#常用实例" class="headerlink" title="常用实例"></a>常用实例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 是否带有小数</span><br><span class="line">function isDecimal(strValue) &#123;</span><br><span class="line">  var objRegExp &#x3D; &#x2F;^\d+\.\d+$&#x2F;</span><br><span class="line">  return objRegExp.test(strValue)</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 是否含有中文名称</span><br><span class="line">function ischina(strValue) &#123;</span><br><span class="line">  var objRegExp &#x3D; &#x2F;^[\u4E00-\u9FA5]&#123;2,4&#125;$&#x2F;</span><br><span class="line">  return objRegExp.test(strValue)</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 是否有8位纯数字组成</span><br><span class="line">function isStudentNo(strValue) &#123;</span><br><span class="line">  var objRegExp &#x3D; &#x2F;^\d&#123;8&#125;$&#x2F;</span><br><span class="line">  return objRegExp.test(strValue)</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 是否符合电话号码格式</span><br><span class="line">function isphoneNum(strValue) &#123;</span><br><span class="line">  var objRegExp &#x3D; &#x2F;^((0\d&#123;2,3&#125;-\d&#123;7,8&#125;)|(1[3584]\d&#123;9&#125;))$&#x2F;</span><br><span class="line">  return objRegExp.test(strValue)</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; 是否符合邮箱格式</span><br><span class="line">function isEmail(strValue) &#123;</span><br><span class="line">  var objRegExp &#x3D; &#x2F;^\w+@[a-zA-Z0-9]&#123;2,10&#125;(?:\.[a-z]&#123;2,4&#125;$)&#x2F;</span><br><span class="line">  return objRegExp.test(strValue)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue中动态修改数组而视图不更新原因及解决方法</title>
      <link href="//post/vueupdate/"/>
      <url>//post/vueupdate/</url>
      
        <content type="html"><![CDATA[<p>vue数据不更新的原因(vue中数据更改了，但是视图没有更新)</p><a id="more"></a><h1 id="tempalte代码"><a href="#tempalte代码" class="headerlink" title="tempalte代码"></a>tempalte代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">  &lt;ul v-for&#x3D;&quot;(item,index) in todoList&quot; :key&#x3D;&quot;index&quot;&gt;</span><br><span class="line">    &lt;li&gt;&lt;&#x2F;li&gt;</span><br><span class="line">    &lt;button @click&#x3D;&#39;editItem(index)&#39;&gt;修改&lt;&#x2F;button&gt;</span><br><span class="line">  &lt;&#x2F;ul&gt;</span><br><span class="line">  &lt;button @click&#x3D;&#39;updataItem&#39;&gt;新增&lt;&#x2F;button&gt;</span><br><span class="line">  &lt;input type&#x3D;&quot;text&quot; id&#x3D;&quot;input_value&quot;&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h1 id="js代码"><a href="#js代码" class="headerlink" title="js代码"></a>js代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">var vm &#x3D; new Vue(&#123;</span><br><span class="line">      el: &#39;#app&#39;,</span><br><span class="line">      data: &#123;</span><br><span class="line">        todoList:[&#39;1&#39;,&#39;2&#39;,&#39;3&#39;],</span><br><span class="line">        text: 4</span><br><span class="line">      &#125;,</span><br><span class="line">      methods: &#123;</span><br><span class="line">        updataItem() &#123;</span><br><span class="line">            vm.todoList.push(vm.text++);</span><br><span class="line">        &#125;,</span><br><span class="line">        editItem(index) &#123;</span><br><span class="line">          var newValue &#x3D; document.querySelector(&#39;#input_value&#39;).value</span><br><span class="line">          vm.todoList[index] &#x3D; newValue</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>上面代码非常简单，我们都知道vue中的data里面声明的数据才具有响应式，所以一开始在data中声明的todoList是包含一些元素，初始遍历一些内容，然后我们在js代码中执行了两行代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var newValue &#x3D; document.querySelector(&#39;#input_value&#39;).value</span><br><span class="line">vm.todoList[index] &#x3D; newValue</span><br></pre></td></tr></table></figure><p>其中  vm.todoList[index] = newValue 是不具有响应式的，但是数据是有更新的，原因：<br>vue的dom更新是异步的，即当setter操作发生后，指令并不会立马更新，指令的更新操作会有一个延迟，当指令更新真正执行的时候，此时vm.todoList[index]属性已经赋值，所以指令更新模板时得到的是新值。</p><h2 id="数组更新检测"><a href="#数组更新检测" class="headerlink" title="数组更新检测"></a>数组更新检测</h2><p>vue包含一些数组操作方法，是可以更新数据并刷新视图的，这些方法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">push()  &#x2F;&#x2F;末端新增</span><br><span class="line">pop() &#x2F;&#x2F;末端删除</span><br><span class="line">unshift() &#x2F;&#x2F;开端新增</span><br><span class="line">shift() &#x2F;&#x2F;开端删除</span><br><span class="line">splice()  &#x2F;&#x2F; 指定位置删除、替换、插入</span><br><span class="line">sort()  &#x2F;&#x2F;翻转</span><br><span class="line">reserve() &#x2F;&#x2F;翻转</span><br></pre></td></tr></table></figure><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>由于 javascript 的限制，vue不能检测以下变动<br>vm.todoList[index] = newValue<br>vm.todoList.length = newLength</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; Vue.set 或 this.$set(vm.items,key,newValue)</span><br><span class="line">vm.$set(vm.todoList,index,newValue)</span><br><span class="line">&#x2F;&#x2F; 利用vue提供的$forceUpdate() 刷新视图</span><br><span class="line"> vm.$forceUpdate()</span><br><span class="line">&#x2F;&#x2F; 用数组操作方法</span><br><span class="line">vm.todoList.splice(index,1,newValue)</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>1.直接向嵌套对象提供响应式属性<br>2.用forceUpdate() 刷新视图<br>3.用数组方法操作<br>Vue.set或 this.$set(vm.items,key,newValue)<br>vm.$forceUpdate()<br>vm.todoList.splice(index,1,newValue) </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue + Element UI 循环生成checkbox无法选中问题</title>
      <link href="//post/Vueset/"/>
      <url>//post/Vueset/</url>
      
        <content type="html"><![CDATA[<p>开始写一个获取一个数组遍历循环生成一些 checkbox 但是却无法选择，究其原因我们一起看看吧</p><a id="more"></a><h1 id="html代码"><a href="#html代码" class="headerlink" title="html代码"></a>html代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class&#x3D;&quot;item&quot; v-for&#x3D;&quot;item in todoList&quot; :key&#x3D;&quot;item.id&quot;&gt;</span><br><span class="line">    &lt;el-checkbox v-model&#x3D;&quot;item.status&quot; @change&#x3D;&#39;checkboxed&#39; :checked&#x3D;&quot;item.status&quot;&gt;</span><br><span class="line">        &lt;div :class&#x3D;&quot;&#123;&#39;text_del&#39;: item.status&#125;&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">    &lt;&#x2F;el-checkbox&gt;</span><br><span class="line">&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure><h1 id="javascript代码"><a href="#javascript代码" class="headerlink" title="javascript代码"></a>javascript代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">data() &#123;</span><br><span class="line">  return &#123;</span><br><span class="line">    todolistValue &#x3D; &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">methods: &#123;</span><br><span class="line"> change() &#123;</span><br><span class="line">    this.todolistValue.title &#x3D; value</span><br><span class="line">    this.todolistValue.status &#x3D; false</span><br><span class="line">    var id &#x3D; ++this.id</span><br><span class="line">    this.todolistValue.id &#x3D; id</span><br><span class="line">    this.todoList.push(this.todolistValue)</span><br><span class="line">    this.todolistValue &#x3D; &#123;&#125;;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是，遍历出的视图根本无法选中和操作</p><img src="https://7bu.top/2020/08/06/9b7bba23d95ce.png" class="[img1]" title="[600] [300] " alt="示意图"><p>经过查阅资料，原来究其原因是：<br>Vue 不允许在已经创建的实例上动态添加新的根级响应式属性 (root-level reactive property)<br>然而它可以使用 Vue.set(object, key, value) 方法将响应属性添加到嵌套的对象上</p><p>所以我们使用以下代码即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$set(&#39;todolistValue&#39;,&#39;status&#39;,false)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>人生得意须尽欢，莫使金樽空对月。</title>
      <link href="//post/hello-world/"/>
      <url>//post/hello-world/</url>
      
        <content type="html"><![CDATA[<p>将进酒<br>君不见黄河之水天上来，奔流到海不复回。<br>君不见高堂明镜悲白发，朝如青丝暮成雪。</p><a id="more"></a><p>人生得意须尽欢，莫使金樽空对月。<br>天生我材必有用，千金散尽还复来。<br>烹羊宰牛且为乐，会须一饮三百杯。<br>岑夫子，丹丘生，将进酒，杯莫停。</p><p>与君歌一曲，请君为我倾耳听。<br>钟鼓馔玉不足贵，但愿长醉不复醒。<br>古来圣贤皆寂寞，惟有饮者留其名。<br>陈王昔时宴平乐，斗酒十千恣欢谑。<br>主人何为言少钱，径须沽取对君酌。<br>五花马、千金裘，呼儿将出换美酒，与尔同销万古愁。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
